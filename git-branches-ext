#!/usr/bin/env python3

import r2d2.repo
from r2d2.color import *
from r2d2.branch import Branch

MASTER = 'master'

repo = None
try:
    repo = r2d2.repo.Repo(git_folder='.git')
except ValueError as e:
    exit(e)

branches = repo.local_branches()
name_width = max([len(branch.name) for branch in branches])

if dev_branch := repo.check_merged_to:
    if dev_branch not in [br.name for br in branches]:
        dev_branch = None

for branch in branches:
    line = ''
    if branch.name == repo.current_branch.name:
        line += whiteb('* ')
        if branch.is_merged_in(MASTER):
            line += greenb(f"{branch.name:{name_width}}")
        else:
            line += whiteb(f"{branch.name:{name_width}}")
    else:
        line += '  '
        if branch.is_merged_in(MASTER):
            line += green(f"{branch.name:{name_width}}")
        else:
            line += white(f"{branch.name:{name_width}}")

    # is current brunch merged to development branch
    if dev_branch:
        if branch.is_merged_in(dev_branch):
            line += magenta(' DEV')
        else:
            line += ' ---'

    # MR weblink
    if mrs := branch.merge_requests():
        mr = mrs[0]
        line += ' ' + mr.web_url

    # description
    line += ' ' + branch.description()

    print(line)
